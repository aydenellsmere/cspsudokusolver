###################################
# Ayden Ellsmere
# Sudoku CSP Linear Regression Plot
###################################

import matplotlib.pyplot as plt
import numpy as np

# Data collected from running basic, foward checking and forward checking + heuristics Sudoku solver on all examples given
plotbasiccounter = [299, 249, 141, 214, 228, 346, 257, 243, 224, 301, 257, 174, 225, 266, 199, 352, 191, 227, 256, 214, 200, 181, 131, 190, 218, 118, 233, 283, 160, 141, 193, 264, 201, 201, 333, 377, 288, 238, 167, 212, 154, 285, 233, 315, 185, 289, 242, 184, 208, 209, 232, 473, 129, 202, 229, 166, 266, 1246, 166, 178, 172, 229, 174, 150, 123, 176, 210, 201, 199, 128, 244, 202, 188, 5029, 359, 192, 168, 186, 101, 278, 266, 210, 267, 5030, 114, 184, 153, 1187, 161, 217, 502, 307, 161, 209, 451, 5023, 115, 128, 573, 887, 109, 450, 5024, 217, 154, 129, 1064, 177, 5027, 5024, 269, 110, 110, 194, 252, 5030, 100, 122, 141, 168, 5023, 144, 206, 340, 2367, 172, 116, 319, 167, 145, 136, 176, 108, 5025, 148, 109, 109, 115, 298, 139, 5015, 211, 265, 272, 193, 118, 93, 5026, 548, 5018, 217, 886, 193, 148, 5024, 145, 186, 221, 5018, 905, 278, 1129, 300, 895, 1265, 5019, 151, 299, 1993, 474, 478, 136, 178, 376, 225, 73, 4014, 1161, 321, 2842, 207, 107, 103, 390, 634, 97, 5018, 350, 135, 1262, 5023, 4013, 102, 5018, 107, 155, 104, 121, 124, 141, 144, 1479, 308, 241, 1195, 169, 5021, 305, 5022, 300, 170, 443, 5016, 5020, 3001, 907, 5021, 145, 2665, 5018, 420, 888, 2624, 80, 5021, 5019, 390, 5015, 5013, 5014, 1776, 5015, 149, 5014, 196, 179, 215, 5017, 166, 268, 217, 2210, 5018, 243, 3658, 5016, 93, 378, 5018, 2360, 5017, 5018, 83, 3093, 1380, 194, 5016, 386, 5016, 5023, 5014, 415, 534, 5012, 188, 5005, 126, 196, 5016, 343, 121, 5008, 715, 866, 5013, 250, 151, 113, 3638, 5014, 181, 5013, 1518, 1369, 5014, 473, 5016, 872, 5011, 293, 776, 5017, 5016, 974, 5017, 5014, 326, 3263, 255, 853, 4964, 2703, 4588, 5017, 5012, 5011, 5012, 435, 1817, 705, 1163, 1530, 4808, 5016, 3166, 5010, 322, 4604, 5011, 5016, 1656, 420, 102, 430, 422, 3315, 1196, 5012, 112, 1769, 194, 5011, 1516, 5009, 4281, 5017, 5006, 1347, 850, 295, 326, 5015, 68, 74, 419, 758, 564, 5012, 5011, 164, 5010, 780, 129, 1054, 5016, 406, 2708, 1285, 150, 1252, 955, 5007, 360, 354, 2750, 205, 2713, 629, 5007, 394, 1118, 1085, 103, 468, 1682, 993, 500, 3117, 5009, 323, 1175, 2360, 248, 768, 5012, 427, 5011, 2468, 2109, 51, 92, 49, 1027, 740, 62, 1812, 5008, 444, 773, 685, 499, 73, 841, 149, 2045, 5011, 45, 223, 3681, 101, 436, 1721, 551, 83, 5008, 1031, 207, 161, 1121, 404, 1588, 124, 509, 353, 436, 225, 1450, 330, 325, 506, 116, 38, 2042, 408, 592, 1551, 483, 90, 509, 186, 101, 263, 182, 110, 40, 147, 689, 187, 651, 350, 50, 50, 340, 194, 61, 1212, 119, 104, 361, 971, 55, 43, 46, 276, 123, 88, 101, 379, 40, 46, 53, 74, 179, 44, 112, 93, 77, 72, 45, 66, 48, 51, 152, 49, 48, 46, 96, 103, 52, 44, 83, 50, 51, 80, 52, 95, 139, 54, 107, 45, 77, 33, 33, 54, 36, 110, 76, 51, 113, 68, 33, 34, 42, 30, 32, 42, 49, 46, 44, 40, 39, 32, 67, 30, 76, 67, 67, 207, 50, 39, 37, 31, 94, 28, 32, 31, 42, 90, 34, 28, 29, 32, 26, 27, 27, 94, 46, 96, 53, 34, 37, 26, 45, 28, 43, 27, 30, 37, 31, 56, 36, 24, 27, 57, 26, 25, 30, 28, 27, 30, 26, 83, 27, 24, 29, 25, 32, 31, 32, 23, 22, 24, 23, 23, 25, 35, 22, 29, 26, 23, 21, 30, 23, 22, 21, 21, 24, 23, 30, 26, 20, 21, 25, 25, 20, 20, 47, 30, 22, 21, 26, 26, 19, 19, 19, 20, 19, 24, 19, 21, 18, 18, 18, 18, 32, 28, 19, 18, 18, 19, 17, 17, 17, 18, 17, 17, 17, 17, 19, 18, 16, 17, 16, 17, 16, 21, 16, 19, 16, 16, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 14, 14, 15, 14, 14, 14, 14, 14, 15, 14, 14, 13, 13, 13, 14, 13, 13, 13, 13, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 11, 12, 11, 11, 11, 12, 11, 11, 11, 12, 10, 11, 10, 10, 10, 10, 10, 10, 10, 10]
plotfwdcheckcounter = [245, 201, 122, 171, 199, 313, 205, 193, 185, 245, 233, 151, 180, 243, 171, 308, 161, 196, 207, 169, 173, 152, 117, 169, 166, 106, 210, 236, 127, 123, 179, 240, 177, 167, 303, 358, 204, 218, 128, 171, 134, 243, 205, 281, 163, 267, 209, 153, 177, 191, 212, 389, 116, 177, 144, 143, 250, 737, 138, 137, 159, 172, 146, 119, 107, 151, 176, 173, 155, 103, 205, 181, 167, 5019, 315, 176, 142, 146, 92, 237, 243, 183, 246, 1655, 107, 159, 130, 1127, 138, 158, 277, 286, 140, 190, 370, 5009, 97, 116, 325, 852, 99, 321, 4765, 163, 137, 108, 544, 136, 4875, 4843, 248, 86, 99, 168, 199, 4719, 88, 99, 126, 140, 4908, 100, 164, 291, 1363, 150, 103, 274, 142, 118, 117, 146, 86, 4648, 135, 92, 79, 96, 223, 119, 2774, 176, 205, 192, 167, 96, 87, 1011, 92, 4478, 108, 416, 132, 97, 4800, 126, 136, 163, 4656, 710, 143, 442, 271, 93, 833, 883, 131, 197, 1946, 308, 240, 107, 134, 312, 164, 63, 1975, 1000, 282, 1273, 171, 91, 90, 314, 297, 77, 4816, 264, 124, 648, 2926, 1636, 69, 4738, 80, 118, 82, 87, 98, 99, 83, 886, 234, 163, 288, 127, 4943, 263, 943, 137, 121, 351, 4908, 4907, 1209, 189, 1254, 119, 2471, 4971, 227, 788, 811, 66, 2143, 4971, 58, 4304, 3749, 4731, 665, 4493, 90, 4445, 138, 140, 192, 4958, 129, 159, 184, 1090, 4469, 140, 1917, 4836, 63, 104, 849, 1567, 4514, 4824, 65, 1775, 975, 164, 4649, 311, 4981, 592, 4778, 197, 202, 4849, 160, 252, 73, 133, 4709, 245, 79, 1242, 452, 667, 685, 229, 70, 78, 374, 68, 131, 4913, 1253, 117, 4828, 290, 4275, 335, 4557, 264, 548, 3809, 4560, 384, 4521, 4793, 212, 293, 194, 186, 379, 1538, 2694, 1274, 888, 1459, 4677, 306, 399, 600, 652, 274, 3704, 2576, 185, 4827, 243, 4526, 3365, 4869, 716, 307, 49, 386, 313, 2069, 438, 4840, 86, 941, 103, 4872, 1047, 1731, 2347, 969, 4661, 210, 278, 137, 289, 667, 54, 60, 248, 140, 137, 2625, 4540, 91, 4531, 527, 82, 685, 4807, 148, 2491, 1051, 101, 63, 115, 4252, 141, 146, 133, 118, 1337, 376, 137, 346, 84, 340, 61, 269, 1350, 213, 384, 909, 2885, 229, 573, 1710, 150, 94, 395, 381, 4503, 848, 488, 42, 62, 44, 273, 345, 56, 920, 1413, 168, 698, 76, 303, 67, 512, 72, 833, 104, 43, 78, 2165, 64, 290, 716, 452, 66, 2014, 497, 66, 69, 125, 101, 115, 41, 318, 253, 353, 184, 41, 81, 119, 369, 50, 37, 404, 126, 53, 480, 166, 52, 211, 90, 45, 70, 81, 69, 37, 85, 180, 102, 140, 72, 36, 37, 118, 46, 37, 179, 58, 80, 117, 247, 35, 36, 41, 210, 56, 62, 73, 140, 35, 35, 34, 33, 39, 33, 93, 50, 38, 36, 33, 40, 35, 33, 49, 34, 46, 34, 34, 73, 35, 35, 31, 33, 32, 49, 35, 33, 96, 46, 57, 33, 30, 30, 30, 39, 30, 48, 31, 40, 42, 39, 30, 29, 30, 29, 29, 29, 35, 29, 35, 29, 28, 28, 30, 28, 39, 43, 33, 95, 33, 28, 27, 27, 61, 27, 27, 27, 27, 31, 27, 27, 26, 26, 26, 26, 26, 30, 26, 30, 46, 26, 25, 25, 30, 25, 26, 25, 25, 27, 25, 26, 25, 24, 24, 36, 24, 24, 24, 24, 24, 25, 23, 24, 23, 23, 23, 23, 24, 27, 25, 23, 22, 22, 22, 22, 24, 22, 22, 24, 22, 22, 21, 21, 22, 21, 21, 21, 21, 21, 23, 21, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 16, 16, 16, 16, 16, 18, 16, 16, 16, 16, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10]
plotheuristicscounter = [80, 80, 95, 81, 80, 82, 156, 80, 80, 89, 79, 79, 79, 83, 80, 83, 79, 80, 79, 147, 79, 78, 78, 78, 308, 79, 78, 78, 78, 82, 77, 93, 77, 79, 5031, 77, 77, 77, 77, 77, 76, 160, 77, 76, 76, 76, 78, 78, 76, 76, 75, 79, 75, 4479, 75, 80, 75, 76, 211, 75, 74, 74, 108, 74, 79, 74, 74, 74, 74, 74, 75, 73, 73, 73, 73, 78, 73, 73, 73, 76, 76, 78, 73, 72, 72, 77, 72, 72, 73, 76, 71, 71, 71, 71, 71, 72, 81, 71, 71, 5028, 70, 71, 70, 70, 70, 80, 70, 70, 70, 70, 69, 69, 69, 69, 69, 69, 69, 69, 70, 82, 68, 68, 68, 78, 68, 69, 68, 68, 68, 69, 67, 71, 1042, 67, 67, 67, 72, 67, 68, 67, 66, 69, 585, 69, 66, 66, 66, 66, 118, 66, 65, 65, 65, 143, 65, 68, 65, 70, 65, 65, 77, 86, 64, 118, 64, 5025, 64, 64, 64, 64, 63, 63, 63, 63, 174, 63, 63, 63, 65, 64, 62, 62, 64, 231, 62, 63, 62, 62, 62, 5022, 61, 61, 61, 61, 62, 61, 61, 61, 61, 5020, 60, 60, 60, 60, 60, 5023, 125, 88, 60, 82, 59, 59, 59, 3869, 59, 59, 614, 72, 66, 59, 58, 166, 58, 346, 58, 67, 58, 289, 58, 58, 63, 57, 57, 57, 57, 57, 57, 57, 57, 60, 56, 57, 5018, 62, 590, 5019, 58, 56, 511, 91, 55, 4570, 5019, 108, 56, 55, 103, 55, 5020, 55, 61, 55, 54, 54, 457, 55, 55, 60, 54, 54, 54, 153, 53, 53, 53, 54, 53, 56, 57, 53, 52, 5014, 604, 5020, 5014, 5015, 111, 5014, 1097, 56, 51, 718, 51, 51, 51, 52, 51, 5017, 51, 5015, 50, 1842, 5015, 50, 50, 50, 59, 50, 50, 5014, 49, 5016, 49, 3543, 49, 5013, 56, 49, 166, 5010, 5016, 48, 5016, 4519, 48, 48, 174, 48, 48, 51, 193, 155, 5017, 47, 3087, 47, 1154, 608, 47, 450, 46, 46, 49, 46, 46, 46, 46, 67, 59, 74, 45, 45, 45, 45, 76, 1289, 78, 47, 1937, 5015, 44, 5011, 50, 44, 44, 5013, 5012, 44, 44, 44, 43, 77, 366, 940, 5011, 43, 46, 5012, 43, 43, 42, 5010, 108, 43, 43, 46, 88, 114, 43, 73, 41, 1797, 67, 41, 41, 41, 41, 41, 80, 41, 120, 82, 51, 40, 296, 43, 67, 40, 40, 40, 44, 39, 58, 39, 39, 201, 317, 39, 182, 39, 38, 38, 38, 38, 74, 41, 38, 2321, 38, 38, 37, 37, 37, 40, 37, 175, 37, 37, 37, 37, 36, 36, 36, 36, 36, 36, 40, 36, 36, 37, 35, 35, 35, 35, 35, 37, 35, 35, 35, 35, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 32, 32, 34, 32, 32, 32, 32, 32, 32, 32, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10]

# Below normalizes all data to be < 300 so that linear regression ignores outliers more
for i in range(len(plotbasiccounter)):
	# Three versions, if test assigned over 300 times replace it with min{300, mean of last 10 elements}
	# Note for most tests that reached the max iterations of 10000 allowed, the number of assignments was usually 3000-6000
	# But there were some tests that did not reach max iterations but still did > 1000 assignments
	# For basic version
	if plotbasiccounter[i] > 300:
		if i >= 10:
			tempsum = 0
			for j in range(10):
				tempsum += plotbasiccounter[i-j+1]
			mean = tempsum/10
			if(mean > 300):
				mean = 300
			plotbasiccounter[i] = mean
	# For foward checking version
	if plotfwdcheckcounter[i] > 300:
		if i >= 10:
			tempsum = 0
			for j in range(10):
				tempsum += plotfwdcheckcounter[i-j+1]
			mean = tempsum/10
			if(mean > 300):
				mean = 300
			plotfwdcheckcounter[i] = mean

	# For heuristics version
	if plotheuristicscounter[i] > 300:
		if i >= 10:
			tempsum = 0
			for j in range(10):
				tempsum += plotheuristicscounter[i-j+1]
			mean = tempsum/10
			if(mean > 300):
				mean = 300
			plotheuristicscounter[i] = mean



# Set up plot index
plotindex = np.arange(len(plotbasiccounter))

# Plot result

# For each version of the solver fit the data to a polynomial then convert that polynomial to a linear function
lines = plt.plot(plotindex, np.poly1d(np.polyfit(plotindex, plotbasiccounter, 1))(plotindex), plotindex, np.poly1d(np.polyfit(plotindex, plotfwdcheckcounter, 1))(plotindex), plotindex, np.poly1d(np.polyfit(plotindex, plotheuristicscounter, 1))(plotindex))
plt.xlim([0,750])
plt.ylim([-5,500])
plt.setp(lines[0], linewidth=1)
plt.setp(lines[1], linewidth=1)
plt.setp(lines[2], linewidth=1)
plt.legend(('Basic', 'Forward Checking', 'Heuristics + Forward Checking'), loc='upper left')
plt.title('Comparison of Sudoku Solvers')
plt.xlabel('Number of Initial Values (= floor(x/10))')
plt.ylabel('Number of Variable Assignments')
plt.show()